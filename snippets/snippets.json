{
  "taro-init": {
    "prefix": "tarocc",
    "body": [
      "import Taro , { Component } from '@tarojs/taro';",
      "import { View, Text , Button} from '@tarojs/components';",
      "",
      "export default class ${1:Index} extends Component {",
      "",
      "   config = {",
      "       navigationBarTitleText: '$2'",
      "  }",
      "",
      "  state={}",
      "",
      "  componentWillMount () {}",
      "  componentDidMount () {} ",
      "  componentWillReceiveProps (nextProps,nextContext) {} ",
      "  componentWillUnmount () {} ",
      "  componentDidShow () {} ",
      "  componentDidHide () {} ",
      "  componentDidCatchError () {} ",
      "  componentDidNotFound () {} ",
      "  render() {",
      "    return (",
      "      <View>",
      "        $3",
      "      </View>",
      "    );",
      "  }",
      "}",
      "export default $1;"
    ],
    "description": "taro初始化模板(Component)"
  },
  "taro-init-ts": {
    "prefix": "tarots",
    "body": [
        "import { ComponentClass } from 'react'",
        "import Taro, { Component } from '@tarojs/taro'",
        "import { View ,Text } from '@tarojs/components'",
        "import './$1.less'",
        "",
        "type PageStateProps = {}",
        "",
        "type PageDispatchProps = {}",
        "",
        "type PageOwnProps = {}",
        "",
        "type PageState = {",
        "    name: string",
        "}",
        "",
        "type IProps = PageStateProps & PageDispatchProps & PageOwnProps", 
        "",
        "interface $1 {",
        "    props: IProps;",
        "    state: PageState",
        "}",
        "",
        "class ${1:Index} extends Component {",
        "   constructor(props){",
        "       super(props)",
        "       this.state = {",
        "          name: '小红'",
        "       }",
        "",    
        "    }",
        
        "componentWillReceiveProps (nextProps) {}",
        "",   
        "componentWillUnmount () { }",
        "",
        "componentDidShow () { }",
        "",
        "componentDidHide () { }",
        "",
        "render () {",
        "    return (",
        "        <View className='$1'>",
        "            <Text>hello world</Text>",
        "        </View>",
        "    )",
        "}",
        "",
        "}",
        "export default $1 as ComponentClass<PageOwnProps, PageState>"
    ],
    "description": "taro ts 版本初始化"
	
  },
  "react-component": {
    "prefix": "reactts",
    "body": [
        "import React, { Component } from 'react'",
        "import { connect } from 'react-redux'",
        "//import * as actions from './storeModel/actionCreater'",
        "",
        "interface Props {",
        "}",
        "interface State {",
        "}",
        "class  ${1:Index} extends Component <Props, State> {",
        "    constructor(props:Props){",
        "       super(props);",
        "        this.state = {",
        "        }",
        "    }",
        "    render() {",
        "",        
        "        return (",
        "            <div className='component-$1'>",
        "",            
        "            </div>",
        "        )",
        "    }",
        "}",
        "",   
        "const mapState = (state) => ({",
        "",
        "})",
        "",    
        "const mapDispatch = (dispatch) => ({",
        "",    
        "})",
        "",    
        "export default connect(mapState, mapDispatch)($1);"        
        ],
        "description": "react ts 版本初始化"
    },
  "taro-init-purecomponent": {
    "prefix": "taropc",
    "body": [
      "import Taro , { PureComponent } from '@tarojs/taro';",
      "import { View, Text , Button} from '@tarojs/components';",
      "",
      "class ${1:Index} extends PureComponent {",
      "",
      "   config = {",
      "       navigationBarTitleText: '$2'",
      "  }",
      "",
      "  state={}",
      "",
      "  componentWillMount () {}",
      "  componentDidMount () {} ",
      "  componentWillReceiveProps (nextProps,nextContext) {} ",
      "  componentWillUnmount () {} ",
      "  componentDidShow () {} ",
      "  componentDidHide () {} ",
      "  componentDidCatchError () {} ",
      "  componentDidNotFound () {} ",
      "  render() {",
      "    return (",
      "      <View>",
      "        $3",
      "      </View>",
      "    );",
      "  }",
      "}",
      "export default $1;"
    ],
    "description": "taro初始化模板(PureComponent)"
  },
  "taro-app-config": {
    "prefix": "taroaf",
    "body": [
      "config = {",
      "  pages: [",
      "    'pages/index/index'",
      "    '$1'",
      "     ],",
      "  window: {",
          "backgroundTextStyle: 'light',",
          "navigationBarBackgroundColor: '#fff',",
          "navigationBarTitleText: 'WeChat',",
          "navigationBarTextStyle: 'black'",
         "}",
      "}"
    ],
    "description": "taro App config"
  },
  "import connect from tarojs/redux": {
    "prefix": "taroir",
    "body": [
      "import { connect } from '@tarojs/redux'"
    ],
    "description": "从@tarojs/redux引入connect"
  },
  "import {} from @tarojs/redux": {
    "prefix": "taroird",
    "body": [
      "import { $1 } from '@tarojs/redux'"
    ],
    "description": "从@tarojs/redux局部引入"
  },
  "import connect from @tarojs/mobx": {
    "prefix": "taroim",
    "body": [
      "import {inject, observer} from '@tarojs/mobx'"
    ],
    "description": "从@tarojs/mobx引入inject/observer"
  },
  "import {} from @tarojs/mobx": {
    "prefix": "taroimd",
    "body": [
      "import { $1 } from '@tarojs/mobx'"
    ],
    "description": "从@tarojs/mobx局部引入"
  },
  "import { } from @tarojs/?": {
    "prefix": "taroimm",
    "body": [
      "import { $2 } from '@tarojs/$1'"
    ],
    "description": "从@tarojs局部引入"
  },
  "import { action, observable, computed, toJS } from 'mobx';": {
    "prefix": "imo",
    "body": [
      "import { action, observable, computed, toJS } from 'mobx'"
    ],
    "description": "import { action, observable, computed, toJS } from 'mobx';"
  }
}